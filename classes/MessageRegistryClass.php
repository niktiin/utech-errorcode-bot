<?php

class MessageRegistryClass {

    public static $messages = [
        'basic' => [
            'keyboard' => [
                [['text' => '/–æ—à–∏–±–∫–∏']],
                [['text' => '/–ø–æ–º–æ—â—å']]
            ],
            'text' => <<< END
                üîß –†–µ–º–æ–Ω—Ç –±–æ—Ç, —Ç–≤–æ–π –Ω–µ –∑–∞–º–µ–Ω–∏–º—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Ä–µ–º–æ–Ω—Ç–µ!\n
                –ö–æ–º–∞–Ω–¥—ã:
                <code>/–æ—à–∏–±–∫–∏</code> <i>‚Äî –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫.</i>
                <code>/–æ—à–∏–±–∫–∞ {—á–∏—Å–ª–æ}</code> <i>‚Äî –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –∏ —Å–ø–æ—Å–æ–±—ã –µ–µ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è. –í–º–µ—Å—Ç–æ <code>{—á–∏—Å–ª–æ}</code> –≤–≤–∏–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ—à–∏–±–∫–∏.</i>
                <code>/–ø–æ–º–æ—â—å</code> <i>‚Äî –í—ã–≤–æ–¥–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.</i>
                END
        ],
        'errorsArray' => [
            'keyboard' => [],
            'text' => '–û—à–∏–±–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–µ–π: G30, Max Plus, Max Plus X. –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö —Ä–µ—à–µ–Ω–∏—è.'
        ],
        'errorsArrayHideKeyboard' => [
            'keyboard' => [
                [['text' => '–ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫–∏...', 'callback_data' => '{"route": "route_showErrorsArray"}']]
            ],
            'text' => '–û—à–∏–±–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–µ–π: G30, Max Plus, Max Plus X. –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö —Ä–µ—à–µ–Ω–∏—è.'
        ],
        'error' => [
            'keyboard' => [
                [['text' => '–°–ø–æ—Å–æ–±—ã —Ä–µ—à–µ–Ω–∏—è', 'callback_data' => '{"route": "route_getSolutions", "code": "%s"}']],
                [['text' => '–ß—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞', 'callback_data' => '{"route": "route_getComponents", "code": "%s"}']]
            ],
            'text' => '–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ <code>#%s</code>:'
        ],
        'errorDoNotExists' => [
            'text' => '–û—à–∏–±–∫–∞ <code>#%s</code> –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!'
        ]
    ];

    final public static function get($key)
    {
        if (!isset(self::$messages[$key])) {
            return false;
        }

        return self::$messages[$key];
    }
    final public static function getErrorsArray() {
        foreach (ErrorRegistryClass::$errors as $key => $value) {
            array_push(self::$messages['errorsArray']['keyboard'], [[
                'text' => "$key ‚Äî $value[desc]",
                'callback_data' => '{"route": "route_getError", "code": "' . $key . '"}'
            ]]);
        }
        array_push(self::$messages['errorsArray']['keyboard'], [[
            'text' => "–°–∫—Ä—ã—Ç—å –æ—à–∏–±–∫–∏...",
            'callback_data' => '{"route": "route_hideErrorsArray"}'
        ]]);
        return  self::$messages['errorsArray'];
    }
    final public static function getError(String $code) {
        if(array_key_exists($code, ErrorRegistryClass::$errors)) {
            return  ErrorRegistryClass::$errors[$code];
        } else {
            return false;
        }
    }
    final public static function getErrorKeyboard(String $code) {
        self::$messages['error']['keyboard'][0][0]['callback_data'] = sprintf(self::$messages['error']['keyboard'][0][0]['callback_data'], $code);
        self::$messages['error']['keyboard'][1][0]['callback_data'] = sprintf(self::$messages['error']['keyboard'][1][0]['callback_data'], $code);
        return self::$messages['error']['keyboard'];
    }
}